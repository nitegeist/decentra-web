import AddIcon from '@mui/icons-material/Add';
import CloseIcon from '@mui/icons-material/Close';
import MailIcon from '@mui/icons-material/Mail';
import InboxIcon from '@mui/icons-material/MoveToInbox';
import ViewSidebarIcon from '@mui/icons-material/ViewSidebar';
import {
  Avatar,
  Box,
  CssBaseline,
  Divider,
  Drawer,
  IconButton,
  List,
  ListItem,
  ListItemButton,
  ListItemIcon,
  ListItemText,
  Toolbar,
  Typography
} from '@mui/material';
import { styled } from '@mui/material/styles';
import Head from 'next/head';
import { useState } from 'react';

const drawerWidth = 340;

const Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })<{
	open?: boolean;
}>(({ theme, open }) => ({
	flexGrow: 1,
	transition: theme.transitions.create('margin', {
		easing: theme.transitions.easing.sharp,
		duration: theme.transitions.duration.leavingScreen,
	}),
	marginLeft: -drawerWidth,
	marginRight: -drawerWidth,
	...(open && {
		transition: theme.transitions.create('margin', {
			easing: theme.transitions.easing.easeOut,
			duration: theme.transitions.duration.enteringScreen,
		}),
		marginLeft: 0,
		marginRight: 0,
	}),
}));

export default function Home() {
	const [open, setOpen] = useState(true);
	const toggleDrawer = (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {
		if (
			event.type === 'keydown' &&
			((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')
		) {
			return;
		}

		setOpen(open);
	};

	return (
		<>
			<Head>
				<title>Decentra Web</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<main>
				<Box sx={{ display: 'flex' }}>
					<CssBaseline />
					<Drawer
						sx={{
							width: drawerWidth,
							flexShrink: 0,
							'& .MuiDrawer-paper': {
								width: drawerWidth,
								bgcolor: 'background.paper',
								boxSizing: 'border-box',
							},
						}}
						variant='persistent'
						anchor='left'
						open={open}>
						<Toolbar sx={{ display: 'flex', justifyContent: 'flex-end' }}>
							<IconButton aria-label='add folder'>
								<AddIcon />
							</IconButton>
						</Toolbar>
						<Divider />
						<List>
							{['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (
								<ListItem key={text} disablePadding>
									<ListItemButton>
										<ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>
										<ListItemText primary={text} />
									</ListItemButton>
								</ListItem>
							))}
						</List>
						<Divider />
						<List>
							{['All mail', 'Trash', 'Spam'].map((text, index) => (
								<ListItem key={text} disablePadding>
									<ListItemButton>
										<ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>
										<ListItemText primary={text} />
									</ListItemButton>
								</ListItem>
							))}
						</List>
					</Drawer>
					<Main open={open} sx={{ flexGrow: 1, bgcolor: 'background.default' }}>
						<Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignContent: 'center' }}>
							<Box sx={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center', gap: '10px' }}>
								<Avatar alt='Decentra' src='/static/images/avatar/1.jpg' />
								<Typography variant='h6' component='h6'>
									Decentra
								</Typography>
							</Box>
							<IconButton onClick={toggleDrawer(!open)}>
								{open ? <CloseIcon aria-label='close sidebars' /> : <ViewSidebarIcon aria-label='show sidebars' />}
							</IconButton>
						</Toolbar>
						<Divider />
						<Box sx={{ p: 3 }}>
							<Typography paragraph>
								Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et
								dolore magna aliqua. Rhoncus dolor purus non enim praesent elementum facilisis leo vel. Risus at
								ultrices mi tempus imperdiet. Semper risus in hendrerit gravida rutrum quisque non tellus. Convallis
								convallis tellus id interdum velit laoreet id donec ultrices. Odio morbi quis commodo odio aenean sed
								adipiscing. Amet nisl suscipit adipiscing bibendum est ultricies integer quis. Cursus euismod quis
								viverra nibh cras. Metus vulputate eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo
								quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus at augue. At augue eget arcu
								dictum varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem donec massa sapien
								faucibus et molestie ac.
							</Typography>
							<Typography paragraph>
								Consequat mauris nunc congue nisi vitae suscipit. Fringilla est ullamcorper eget nulla facilisi etiam
								dignissim diam. Pulvinar elementum integer enim neque volutpat ac tincidunt. Ornare suspendisse sed nisi
								lacus sed viverra tellus. Purus sit amet volutpat consequat mauris. Elementum eu facilisis sed odio
								morbi. Euismod lacinia at quis risus sed vulputate odio. Morbi tincidunt ornare massa eget egestas purus
								viverra accumsan in. In hendrerit gravida rutrum quisque non tellus orci ac. Pellentesque nec nam
								aliquam sem et tortor. Habitant morbi tristique senectus et. Adipiscing elit duis tristique sollicitudin
								nibh sit. Ornare aenean euismod elementum nisi quis eleifend. Commodo viverra maecenas accumsan lacus
								vel facilisis. Nulla posuere sollicitudin aliquam ultrices sagittis orci a.
							</Typography>
						</Box>
					</Main>
					<Drawer
						sx={{
							width: drawerWidth,
							flexShrink: 0,
							'& .MuiDrawer-paper': {
								width: drawerWidth,
								bgcolor: 'background.default',
								boxSizing: 'border-box',
							},
						}}
						variant='persistent'
						anchor='right'
						open={open}>
						<Toolbar />
						<Divider />
						<List>
							{['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (
								<ListItem key={text} disablePadding>
									<ListItemButton>
										<ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>
										<ListItemText primary={text} />
									</ListItemButton>
								</ListItem>
							))}
						</List>
						<Divider />
						<List>
							{['All mail', 'Trash', 'Spam'].map((text, index) => (
								<ListItem key={text} disablePadding>
									<ListItemButton>
										<ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>
										<ListItemText primary={text} />
									</ListItemButton>
								</ListItem>
							))}
						</List>
					</Drawer>
				</Box>
			</main>
		</>
	);
}
